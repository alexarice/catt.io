prog: COH IDENT COLON IDENT LAMBDA
##
## Ends in an error in state: 22.
##
## cat -> IDENT . [ VBAR RPAR RBRKT LET EOF COH ]
## term2 -> IDENT . [ TYPE LPAR LBRKT IDENT CAT ARROW ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON IDENT RPAR
##
## Ends in an error in state: 53.
##
## cat -> cat . VBAR term ARROW term [ VBAR LET EOF COH ]
## defn -> COH IDENT tele COLON cat . [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## COH IDENT tele COLON cat
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production cat -> IDENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON IDENT VBAR TYPE ARROW VBAR
##
## Ends in an error in state: 29.
##
## cat -> cat VBAR term ARROW . term [ VBAR RPAR RBRKT LET EOF COH ]
##
## The known suffix of the stack is as follows:
## cat VBAR term ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON IDENT VBAR TYPE VBAR
##
## Ends in an error in state: 28.
##
## cat -> cat VBAR term . ARROW term [ VBAR RPAR RBRKT LET EOF COH ]
##
## The known suffix of the stack is as follows:
## cat VBAR term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON IDENT VBAR VBAR
##
## Ends in an error in state: 27.
##
## cat -> cat VBAR . term ARROW term [ VBAR RPAR RBRKT LET EOF COH ]
##
## The known suffix of the stack is as follows:
## cat VBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON TYPE ARROW VBAR
##
## Ends in an error in state: 24.
##
## cat -> term ARROW . term [ VBAR RPAR RBRKT LET EOF COH ]
##
## The known suffix of the stack is as follows:
## term ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON TYPE VBAR
##
## Ends in an error in state: 23.
##
## cat -> term . ARROW term [ VBAR RPAR RBRKT LET EOF COH ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT COLON VBAR
##
## Ends in an error in state: 52.
##
## defn -> COH IDENT tele COLON . cat [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## COH IDENT tele COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH IDENT VBAR
##
## Ends in an error in state: 51.
##
## defn -> COH IDENT tele . COLON cat [ LET EOF COH ]
## tele -> tele . var_decl [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## COH IDENT tele
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: COH VBAR
##
## Ends in an error in state: 49.
##
## defn -> COH . IDENT tele COLON cat [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## COH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON CAT EQUAL CAT ARROW
##
## Ends in an error in state: 57.
##
## nonempty_list(defn) -> defn . [ EOF ]
## nonempty_list(defn) -> defn . nonempty_list(defn) [ EOF ]
##
## The known suffix of the stack is as follows:
## defn
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
## In state 46, spurious reduction of production defn -> LET IDENT tele COLON term EQUAL term 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LAMBDA IDENT DOT VBAR
##
## Ends in an error in state: 12.
##
## term -> LAMBDA IDENT DOT . term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LAMBDA IDENT DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LAMBDA IDENT VBAR
##
## Ends in an error in state: 11.
##
## term -> LAMBDA IDENT . DOT term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LAMBDA IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LAMBDA VBAR
##
## Ends in an error in state: 10.
##
## term -> LAMBDA . IDENT DOT term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LAMBDA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LBRKT IDENT RPAR
##
## Ends in an error in state: 26.
##
## cat -> cat . VBAR term ARROW term [ VBAR RBRKT ]
## term2 -> LBRKT cat . RBRKT [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## LBRKT cat
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production cat -> IDENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LBRKT VBAR
##
## Ends in an error in state: 9.
##
## term2 -> LBRKT . cat RBRKT [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## LBRKT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR IDENT COLON TYPE RPAR ARROW VBAR
##
## Ends in an error in state: 36.
##
## term -> LPAR IDENT COLON term RPAR ARROW . term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON term RPAR ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR IDENT COLON TYPE RPAR VBAR
##
## Ends in an error in state: 35.
##
## term -> LPAR IDENT COLON term RPAR . ARROW term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON term RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR IDENT COLON TYPE VBAR
##
## Ends in an error in state: 34.
##
## term -> LPAR IDENT COLON term . RPAR ARROW term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR IDENT COLON VBAR
##
## Ends in an error in state: 33.
##
## term -> LPAR IDENT COLON . term RPAR ARROW term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR IDENT VBAR
##
## Ends in an error in state: 32.
##
## term -> LPAR IDENT . COLON term RPAR ARROW term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
## term2 -> IDENT . [ TYPE RPAR LPAR LBRKT IDENT CAT ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR TYPE VBAR
##
## Ends in an error in state: 18.
##
## term2 -> LPAR term . RPAR [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON LPAR VBAR
##
## Ends in an error in state: 8.
##
## term -> LPAR . IDENT COLON term RPAR ARROW term [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
## term2 -> LPAR . term RPAR [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON TYPE EQUAL VBAR
##
## Ends in an error in state: 45.
##
## defn -> LET IDENT tele COLON term EQUAL . term [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## LET IDENT tele COLON term EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON TYPE LAMBDA
##
## Ends in an error in state: 16.
##
## term -> term1 . [ VBAR RPAR RBRKT LET EQUAL EOF COH ARROW ]
## term1 -> term1 . term2 [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## term1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON TYPE LPAR VBAR
##
## Ends in an error in state: 17.
##
## term2 -> LPAR . term RPAR [ VBAR TYPE RPAR RBRKT LPAR LET LBRKT IDENT EQUAL EOF COH CAT ARROW ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON TYPE VBAR
##
## Ends in an error in state: 44.
##
## defn -> LET IDENT tele COLON term . EQUAL term [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## LET IDENT tele COLON term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT COLON VBAR
##
## Ends in an error in state: 43.
##
## defn -> LET IDENT tele COLON . term EQUAL term [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## LET IDENT tele COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR IDENT COLON TYPE VBAR
##
## Ends in an error in state: 41.
##
## var_decl -> LPAR IDENT COLON term . RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production term -> term1 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR IDENT COLON VBAR
##
## Ends in an error in state: 40.
##
## var_decl -> LPAR IDENT COLON . term RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR IDENT DBLCOLON IDENT RBRKT
##
## Ends in an error in state: 38.
##
## cat -> cat . VBAR term ARROW term [ VBAR RPAR ]
## var_decl -> LPAR IDENT DBLCOLON cat . RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT DBLCOLON cat
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production cat -> IDENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR IDENT DBLCOLON VBAR
##
## Ends in an error in state: 6.
##
## var_decl -> LPAR IDENT DBLCOLON . cat RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT DBLCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR IDENT VBAR
##
## Ends in an error in state: 5.
##
## var_decl -> LPAR IDENT . COLON term RPAR [ LPAR COLON ]
## var_decl -> LPAR IDENT . DBLCOLON cat RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT LPAR VBAR
##
## Ends in an error in state: 4.
##
## var_decl -> LPAR . IDENT COLON term RPAR [ LPAR COLON ]
## var_decl -> LPAR . IDENT DBLCOLON cat RPAR [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET IDENT VBAR
##
## Ends in an error in state: 3.
##
## defn -> LET IDENT tele . COLON term EQUAL term [ LET EOF COH ]
## tele -> tele . var_decl [ LPAR COLON ]
##
## The known suffix of the stack is as follows:
## LET IDENT tele
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: LET VBAR
##
## Ends in an error in state: 1.
##
## defn -> LET . IDENT tele COLON term EQUAL term [ LET EOF COH ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: VBAR
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

