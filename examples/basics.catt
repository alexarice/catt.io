#
#  basics.catt - basic definitions in the underyling type theory
#

let idf {A : U} (a : A) : A = a

# Impredicative Lists
let List : U -> U
  = λ A. (L : U) -> (A -> L -> L) -> L -> L
let nil : (A : _) -> List A
  = λ A. λ L. λ cons. λ nil. nil
let cons : (A : U) -> A -> List A -> List A
  = λ A. λ x. λ xs. λ L. λ cons. λ nil. cons x (xs _ cons nil)

# Testing unicode
let funα {Γ : U} (γ : Γ) : Γ = γ 

