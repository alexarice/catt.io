#
#  cyl-1.catt - A first cylinder example
#

import base


# Our example coherence.  
let excoh
    (x : *)
    (y : *) (f : x -> y)
    (z : *) (g : y -> z)
  : x -> z
  = comp3(f,g,id(z))

#  Our cylinder context: a composite of two 1-cylinders
let cylcomp
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : *
  = x0 

# Source 0-cylinder
let excoh_cylcomp_src_0 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : *
  = x0
  
let excoh_cylcomp_src_1 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : *
  = x1
  
let excoh_cylcomp_src 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : excoh_cylcomp_src_0(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g) ->
    excoh_cylcomp_src_1(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g)
  = x

# Target 0-cylinder
let excoh_cylcomp_tgt_0 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : *
  = z0
  
let excoh_cylcomp_tgt_1 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : *
  = z1
  
let excoh_cylcomp_tgt 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : excoh_cylcomp_tgt_0(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g) ->
    excoh_cylcomp_tgt_1(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g)
  = z

# The resulting 1-cylinder
let excoh_cylcomp_0
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : excoh_cylcomp_src_0(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g) ->
    excoh_cylcomp_tgt_0(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g)
  = excoh(x0,y0,f0,z0,g0)
  
let excoh_cylcomp_1 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : excoh_cylcomp_src_1(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g) ->
    excoh_cylcomp_tgt_1(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g)
  = excoh(x1,y1,f1,z1,g1)

#
#  The coherences required for the filling 2-cell
#

coh excoh_coh_z
    (x : *) 
    (y : *) (f : x -> y)
    (z0 : *) (g : y -> z0)
    (z1 : *) (z : z0 -> z1)
  : comp(excoh(x,y,f,z0,g),z) ->
    excoh(x,y,f,z1,comp(g,z)) 

coh excoh_coh_g
    (x : *)
    (y : *) (f : x -> y)
    (z : *) (g0 : y -> z)
            (g1 : y -> z) (g : g0 -> g1)
  : excoh(x,y,f,z,g0) ->
    excoh(x,y,f,z,g1)
  
coh excoh_coh_y
    (x : *) 
    (y0 : *) (f : x -> y0)
    (y1 : *) (y : y0 -> y1)
    (z : *) (g : y1 -> z)
  : excoh(x,y0,f,z,comp(y,g)) ->
    excoh(x,y1,comp(f,y),z,g) 

coh excoh_coh_f
    (x : *)
    (y : *) (f0 : x -> y)
            (f1 : x -> y) (f : f0 -> f1)
    (z : *) (g : y -> z)
  : excoh(x,y,f0,z,g) ->
    excoh(x,y,f1,z,g)
            
coh excoh_coh_x
    (x0 : *)
    (x1 : *) (x : x0 -> x1)
    (y : *) (f : x1 -> y)
    (z : *) (g : y -> z)
  : excoh(x0,y,comp(x,f),z,g) ->
    comp(x,excoh(x1,y,f,z,g)) 

# This should be it, but it looks like we have some kind of
# typechecking bug which is preventing this from working...
let excoh_cyclcomp 
    (x0 : *) (x1 : *) (x : x0 -> x1)
    (y0 : *) (y1 : *) (y : y0 -> y1)
    (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
    (z0 : *) (z1 : *) (z : z0 -> z1)
    (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
  : comp(excoh_cylcomp_0(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g),
         excoh_cylcomp_tgt(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g)) ->
    comp(excoh_cylcomp_src(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g),
         excoh_cylcomp_1(x0,x1,x,y0,y1,y,f0,f1,f,z0,z1,z,g0,g1,g))
  # : comp(excoh(x0,y0,f0,z0,g0),z) -> 
  #   comp(x,excoh(x1,y1,f1,z1,g1))
  = vert5(
      excoh_coh_z(f0,g0,z),
      excoh_coh_g(f0,g),
      excoh_coh_y(f0,y,g1),
      excoh_coh_f(f,g1),
      excoh_coh_x(x,f1,g1)
    )

#
#  Some more explicit typings ...
#

# # excoh_coh_z(f0,g0,z) : comp(excoh(f0,g0),z) -> excoh(f0,comp(g0,z))
# let one
#     (x0 : *) (x1 : *) (x : x0 -> x1)
#     (y0 : *) (y1 : *) (y : y0 -> y1)
#     (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
#     (z0 : *) (z1 : *) (z : z0 -> z1)
#     (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
#   : comp(excoh(x0,y0,f0,z0,g0),z) -> excoh(x0,y0,f0,z1,comp(g0,z))
#   = excoh_coh_z(f0,g0,z)

# # excoh_coh_g(g0,g)    : excoh(f0,comp(g0,z)) -> excoh(f0,comp(y,g1))
# let two 
#     (x0 : *) (x1 : *) (x : x0 -> x1)
#     (y0 : *) (y1 : *) (y : y0 -> y1)
#     (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
#     (z0 : *) (z1 : *) (z : z0 -> z1)
#     (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
#   : excoh(x0,y0,f0,z1,comp(g0,z)) -> excoh(x0,y0,f0,z1,comp(y,g1))
#   = excoh_coh_g(f0,g)

# # excoh_coh_y(f0,y,g1) : excoh(f0,comp(y,g1)) -> excoh(comp(f0,y),g1)
# let three
#     (x0 : *) (x1 : *) (x : x0 -> x1)
#     (y0 : *) (y1 : *) (y : y0 -> y1)
#     (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
#     (z0 : *) (z1 : *) (z : z0 -> z1)
#     (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
#   : excoh(x0,y0,f0,z1,comp(y,g1)) -> excoh(x0,y1,comp(f0,y),z1,g1)
#   = excoh_coh_y(f0,y,g1)
  
# # excoh_coh_f(f,g1)    : excoh(comp(f0,y),g1) -> excoh(comp(x,f1),g1)
# let four
#     (x0 : *) (x1 : *) (x : x0 -> x1)
#     (y0 : *) (y1 : *) (y : y0 -> y1)
#     (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
#     (z0 : *) (z1 : *) (z : z0 -> z1)
#     (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
#   : excoh(x0,y1,comp(f0,y),z1,g1) -> excoh(x0,y1,comp(x,f1),z1,g1)
#   = excoh_coh_f(f,g1)

# # excoh_coh_x(x,f1,g1) : excoh(comp(x,f1),g1) -> comp(x,excoh(f1,g1))
# let five
#     (x0 : *) (x1 : *) (x : x0 -> x1)
#     (y0 : *) (y1 : *) (y : y0 -> y1)
#     (f0 : x0 -> y0) (f1 : x1 -> y1) (f : comp(f0,y) -> comp(x,f1))
#     (z0 : *) (z1 : *) (z : z0 -> z1)
#     (g0 : y0 -> z0) (g1 : y1 -> z1) (g : comp(g0,z) -> comp(y,g1))
#   : excoh(x0,y1,comp(x,f1),z1,g1) -> comp(x,excoh(x1,y1,f1,z1,g1))
#   = excoh_coh_x(x,f1,g1)
