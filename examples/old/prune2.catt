#
#  prune2.catt - pruning example
#

import prelude

# normalize (x : *)
#  | id(x)

# normalize (x : *)
#  | id1(id(x))

normalize (x : *)
          (y : *) (f : x -> y)
                  (g : x -> y) (a : f -> g)
          (z : *) (h : y -> z)
                  (k : y -> z) (b : h -> k)
 | h3(a,id1(id(y)),b)


# let unit_mid = coh (x : *)
#                    (y : *) (f : x -> y)
#                    (z : *) (g : y -> z)
#                 : cmp3(f,id(y),g) -> cmp(f,g)

# let unit_mid_inv = coh (x : *)
#                        (y : *) (f : x -> y)
#                        (z : *) (g : y -> z)
#                     : cmp(f,g) -> cmp3(f,id(y),g) 

# let nm_test = coh (x : *)
#                   (y : *) (f : x -> y)
#                           (g : x -> y) (a : f -> g)
#                   (z : *) (h : y -> z)
#                           (k : y -> z) (b : h -> k)
#            : h3(a,id1(id(y)),b) ->
#              v3(unit_mid(f,h),h2(a,b),unit_mid_inv(g,k))


# [coh (x : *) (y : *) (f : x -> y) (g : x -> y) (a : f -> g) (z : *) (h : y -> z) (k : y -> z) (b : h -> k)
#   : ... ->
#     [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : x0 -> x1) (x4 : x2 -> x3) (x5 : x0 -> x1) (x6 : x3 -> x5) (x7 : x0 -> x1) (x8 : x5 -> x7) : x2 -> x7]
#       ([coh (x : *) (y : *) (g : x -> y) (z : *) (k : y -> z)
#          : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](k, g) ->
#            [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](k, [coh (x0 : *) : x0 -> x0](y), g)](k, g),
#        [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : x0 -> x1) (x4 : x2 -> x3) (x9 : *) (x10 : x1 -> x9) (x11 : x1 -> x9) (x12 : x10 -> x11) : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x10, x2) -> [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x11, x3)](b, a),
#        [coh (x : *) (y : *) (f : x -> y) (z : *) (h : y -> z) : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](h, [coh (x0 : *) : x0 -> x0](y), f) -> [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](h, f)](h, f))](b, a)



# The Normalizer
# [coh (x : *)
#      (y : *) (f : x -> y)
#              (g : x -> y) (a : f -> g)
#      (z : *) (h : y -> z)
#              (k : y -> z) (b : h -> k)
#   : h3(a,id1(id(y)),b) ->
#     [comp (x0 : *)
#           (x1 : *) (x2 : x0 -> x1)
#                    (x3 : x0 -> x1) (x4 : x2 -> x3)
#                    (x5 : x0 -> x1) (x6 : x3 -> x5)
#                    (x7 : x0 -> x1) (x8 : x5 -> x7) : x2 -> x7]
#       ([coh (x : *)
#             (y : *) (g : x -> y)
#             (z : *) (k : y -> z)
#             : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](g, k) ->
#               [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](g, [coh (x0 : *) : x0 -> x0](y), k)](g, k),
#        [comp (x0 : *)
#              (x1 : *) (x2 : x0 -> x1)
#                       (x3 : x0 -> x1) (x4 : x2 -> x3)
#              (x9 : *) (x10 : x1 -> x9)
#                       (x11 : x1 -> x9) (x12 : x10 -> x11)
#              : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x2, x10) ->
#                [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x3, x11)](a, b),
#        [coh (x : *)
#             (y : *) (f : x -> y)
#             (z : *) (h : y -> z)
#             : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](f, [coh (x0 : *) : x0 -> x0](y), h) ->
#               [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](f, h)](f, h))](a, b)

# Typechecking error: The term
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : x0 -> x1) (x4 : x2 -> x3) (x9 : *) (x10 : x1 -> x9) (x11 : x1 -> x9) (x12 : x10 -> x11) : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x2, x10) -> [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x3, x11)](a, b)

# was expected to have type
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](g, [coh (x0 : *) : x0 -> x0](y), k) -> [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](g, [coh (x0 : *) : x0 -> x0](y), k)

# but was inferred to have type
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](f, h) -> [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](g, k)


# Next Pass ....
# [coh (x : *)
#      (y : *) (f : x -> y)
#              (g : x -> y) (a : f -> g)
#      (z : *) (h : y -> z)
#              (k : y -> z) (b : h -> k)
#   : h3(a,id1(id(y)),b) ->
#     [comp (x0 : *)
#           (x1 : *) (x2 : x0 -> x1)
#                    (x3 : x0 -> x1) (x4 : x2 -> x3)
#                    (x5 : x0 -> x1) (x6 : x3 -> x5)
#                    (x7 : x0 -> x1) (x8 : x5 -> x7) : x2 -> x7]
#       ([coh (x : *) (y : *) (g : x -> y) (z : *) (k : y -> z)
#          : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](g, [coh (x0 : *) : x0 -> x0](y), k) ->
#            [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](g, k)](g, k),
#        [comp (x0 : *)
#              (x1 : *) (x2 : x0 -> x1)
#                       (x3 : x0 -> x1) (x4 : x2 -> x3)
#              (x9 : *) (x10 : x1 -> x9)
#                       (x11 : x1 -> x9) (x12 : x10 -> x11)
#          : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x2, x10) ->
#            [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x3, x11)](a, b),
#        [coh (x : *) (y : *) (f : x -> y) (z : *) (h : y -> z)
#          : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](f, h) ->
#            [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](f, [coh (x0 : *) : x0 -> x0](y), h)](f, h))](a, b)


# Typechecking error: The term
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : x0 -> x1) (x4 : x2 -> x3) (x9 : *) (x10 : x1 -> x9) (x11 : x1 -> x9) (x12 : x10 -> x11) :
#     [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x2, x10) ->
#     [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](x3, x11)](a, b)
# was expected to have type
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](g, k) ->
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) (x5 : *) (x6 : x3 -> x5) : x0 -> x5](g, [coh (x0 : *) : x0 -> x0](y), k)
# but was inferred to have type
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](f, h) ->
#   [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x5 : *) (x6 : x1 -> x5) : x0 -> x5](g, k)

























# In the next example, we use a non-identity endomorphism coherence.
# This normalizes to h2 as expected.

# let cmpid = coh (x : *)
#                 (y : *) (f : x -> y)
#                 (z : *) (g : y -> z)
#              : cmp(f,g) -> cmp(f,g)
             
# normalize (x : *)
#           (y : *) (f : x -> y)
#                   (g : x -> y) (a : f -> g)
#           (z : *) (h : y -> z)
#                   (k : y -> z) (b : h -> k)
#  | v2(h2(a,b),cmpid(g,k))

# Normal form:
# [comp (x0 : *)
#       (x1 : *) (x2 : x0 -> x1)
#                (x3 : x0 -> x1) (x4 : x2 -> x3)
#       (x5 : *) (x6 : x1 -> x5)
#                (x7 : x1 -> x5) (x8 : x6 -> x7)
#   : [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) : x0 -> x3](x0, x1, x2, x5, x6) ->
#     [comp (x0 : *) (x1 : *) (x2 : x0 -> x1) (x3 : *) (x4 : x1 -> x3) : x0 -> x3](x0, x1, x3, x5, x7)](x, y, f, g, a, z, h, k, b)




