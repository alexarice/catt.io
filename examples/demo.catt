#
#  demo.catt - demo for catt typechecker
#

let id = coh (x : *) : x -> x

let h = comp (x : *)
             (y : *) (f : x -> y)
             (z : *) (g : y -> z)
        : x -> z

let v2 = comp (x : *)
              (y : *) (f : x -> y)
                      (g : x -> y) (a : f -> g)
                      (h : x -> y) (b : g -> h)
         : f -> h

let h2 = comp (x : *)
              (y : *) (f : x -> y)
                      (g : x -> y) (a : f -> g)
              (z : *) (h : y -> z)
                      (k : y -> z) (b : h -> k)
         : h(x,y,f,z,h) -> h(x,y,g,z,k)

let assoc = coh (x : *)
                (y : *) (f : x -> y)
                (z : *) (g : y -> z)
                (w : *) (h : z -> w)
            : h(x,z,h(x,y,f,z,g),w,h) ->
              h(x,y,f,w,h(y,z,g,w,h))

let ichg = coh (x : *)
               (y : *) (f : x -> y) 
                       (g : x -> y) (a : f -> g)
                       (h : x -> y) (b : g -> h)
               (z : *) (i : y -> z)
                       (j : y -> z) (c : i -> j)
                       (k : y -> z) (d : j -> k)
           : h2(x,y,f,h,v2(x,y,f,g,a,h,b),z,i,k,v2(y,z,i,j,c,k,d)) ->
           v2(x,z,h(x,y,f,z,i),h(x,y,g,z,j),h2(x,y,f,g,a,z,i,j,c),h(x,y,h,z,k),h2(x,y,g,h,b,z,j,k,d))

let double (x : *) (f : x -> x) : x -> x
 = h(x,x,f,x,f)

let quadruple (x : *) (f : x -> x) : x -> x
 = double(x,double(x,f))

let anonymous_unit (x : *) (f : x -> x) : x -> x
 = h(x,x,f,x,[coh (x : *) : x -> x](x))

let anonymous_double (x : *) (f : x -> x) : x -> x
 = [comp (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) : x -> z](x,x,f,x,f)

eqnf (x : *) (f : x -> x)
 | double(x,f)
 | quadruple(x,f)

